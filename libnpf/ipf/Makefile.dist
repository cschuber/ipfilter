#
# Copyright (c) 2007
#      Darren Reed.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $Id$
#
TOP=..
CFLAGS+=-I$(TOP) -I. -I$(HOME)/ipf5
SO_CFLAGS=$(CFLAGS) -fPIC -shared -I$(HOME)/ipf5

IPFOBJSO=npf_ipf_fw_rule_to_frentry.o npf_ipf_setv6mask.o \
	 npf_ipf_ipferror_save.o npf_ipf_error_set.o \
	 npf_ipf_option_role.o npf_ipf_option_timeout.o \
	 __OBJS__

IPFOBJS_SO=npf_ipf_fw_rule_to_frentry.so npf_ipf_setv6mask.so \
	  npf_ipf_ipferror_save.so npf_ipf_error_set.so \
	 npf_ipf_option_role.so npf_ipf_option_timeout.so \
	  __SOBJS__

all: libnpf_ipf.a libnpf_ipf.so

libnpf_ipf.a: $(IPFOBJSO)
	ar cq $@ $(IPFOBJSO)

libnpf_ipf.so: $(IPFOBJS_SO)
	ld -shared $(IPFOBJS_SO) -o $@

npf_ipf_fw_rule_to_frentry.o: npf_ipf_fw_rule_to_frentry.c $(TOP)/npf.h \
			      npf_ipf.h
	$(CC) $(CFLAGS) -c npf_ipf_fw_rule_to_frentry.c -o $@

npf_ipf_setv6mask.o: npf_ipf_setv6mask.c $(TOP)/npf.h npf_ipf.h
	$(CC) $(CFLAGS) -c npf_ipf_setv6mask.c -o $@

npf_ipf_ipferror_save.o: npf_ipf_ipferror_save.c npf_ipf.h
	$(CC) $(CFLAGS) -c npf_ipf_ipferror_save.c -o $@

npf_ipf_error_set.o: npf_ipf_error_set.c npf_ipf.h
	$(CC) $(CFLAGS) -c npf_ipf_error_set.c -o $@

npf_ipf_fw_rule_to_frentry.so: npf_ipf_fw_rule_to_frentry.c $(TOP)/npf.h \
			       npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_fw_rule_to_frentry.c -o $@

npf_ipf_setv6mask.so: npf_ipf_setv6mask.c $(TOP)/npf.h npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_setv6mask.c -o $@

npf_ipf_ipferror_save.so: npf_ipf_ipferror_save.c npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_ipferror_save.c -o $@

npf_ipf_error_set.so: npf_ipf_error_set.c npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_error_set.c -o $@

npf_ipf_option_role.so: npf_ipf_option_role.c npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_option_role.c -o $@

npf_ipf_option_timeout.so: npf_ipf_option_timeout.c npf_ipf.h
	$(CC) $(SO_CFLAGS) -c npf_ipf_option_timeout.c -o $@

clean:
	/bin/rm -f *.o *.a *.so

