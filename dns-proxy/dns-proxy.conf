#
normal="MX,NS,A,PTR,SOA,CNAME";
v6="AAAA,A6";
safe="$v6,$normal";
#
port fred { udp 0.0.0.0,5053; transparent off; };

port john { udp 127.0.0.1,5063; transparent on; };

forwarders default { 208.201.224.11; 208.201.224.33; };
forwarders ipv6 { 2.2.2.1; };
forwarders localhost { 127.0.0.1; };

timeset workhours {
	weekdays 08:00 - 18:00;
};

acl nominate { source (*); port (*); recursion *; policy { nomatch *($safe); block *; }; };
acl jane { source (all); port (fred,john); recursion *; policy { block *.xxx;}; };
acl safe { source (all); port (fred); recursion *; policy { allow *($safe); }; };
acl drexel { source (192.168.0.0/16); port (fred); times workhours;
	recursion *; policy {
		allow * ($v6);
	};
};

acl mark { source (*); port (fred); recursion *; policy {
	allow .cnn.com; block cnn.com;
	};
};

acl sasha { source (192.168.0.0/16); port (fred); recursion *; policy {
		block .baz.com;
		allow foo.baz.com ($normal);
	};
};

acl tom { source (10.0.0.0/8); port (fred); recursion *; policy {
		reject fubar.baz.com;
	};
};

modify default question { acl (*); recursion preserve; keep ($safe); strip (*); clear(); };

forward { acl (*); to (localhost); };
forward { acl (*); to (default); };

#
#
#
#
#
#
#
#
#
#filter { acl (john) rr (all) { allow ($safe); strip (*); }; };
#filter { rr (answers) { allow ($safe); strip (*); }; };
#filter { rr (question) { allow ($safe); strip (*); }; };
#filter { acl (*) rr (additional,servers) { allow ($safe); strip (*); }; };
#
#query type (AAAA) { forwarder (ipv6); };
#query type (NULL) { block; };
#query name (.local) { forwarder (localhost); };
#
#match default question { name (.cnn.com,.msn.com); type (*); acl (default); ]
#			 do { keep ($safe); strip (*); forward (default); };
#match blocked question { name (.cnn.com,.msn.com); type (*); acl (default); ]
#			 do { block (NULL); };
