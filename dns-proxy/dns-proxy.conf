#
normal="MX,NS,A,PTR,SOA";
v6="AAAA,A6";
safe="$v6,$normal";
#
port fred { udp 192.168.1.1,5053; transparent off; };

port john { udp 127.0.0.1,5063; transparent on; };

forwarders default { 2.2.2.1; 2.2.2.3; };
forwarders ipv6 { 2.2.2.1; };
forwarders localhost { 127.0.0.1; };

acl safe { source (*); port (*); policy { nomatch *($safe); block *; }; };
acl jane { source (all); port (fred,john); policy { block *.xxx;}; };

acl drexel { source (192.168.0.0/16); port (fred); policy {
		allow * ($v6);
	};
};

acl mark { source (*); port (fred); policy {
	allow .cnn.com; block cnn.com;
	};
};

acl sasha { source (192.168.0.0/16); port (fred); policy {
		block .baz.com;
		allow foo.baz.com ($normal);
	};
};

acl tom { source (10.0.0.0/8); port (fred); policy {
		reject fubar.baz.com;
	};
};

modify default question { acl (*); keep ($safe); strip (*); };

forward { acl (*); to (default); };
forward { acl (*); to (ipv6); };

#
#
#
#
#
#
#
#
#
#filter { acl (john) rr (all) { allow ($safe); strip (*); }; };
#filter { rr (answers) { allow ($safe); strip (*); }; };
#filter { rr (question) { allow ($safe); strip (*); }; };
#filter { acl (*) rr (additional,servers) { allow ($safe); strip (*); }; };
#
#query type (AAAA) { forwarder (ipv6); };
#query type (NULL) { block; };
#query name (.local) { forwarder (localhost); };
#
#match default question { name (.cnn.com,.msn.com); type (*); acl (default); ]
#			 do { keep ($safe); strip (*); forward (default); };
#match blocked question { name (.cnn.com,.msn.com); type (*); acl (default); ]
#			 do { block (NULL); };
