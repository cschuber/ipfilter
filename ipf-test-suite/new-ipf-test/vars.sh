#
#
#LOGGING=OFF
LOGGING=ON
#
NET0_NET_V4=192.168.101
NET0_NETMASK_V4=255.255.255.0
NET0_NET_V6=192:168:101
NET0_NETMASK_V6=48
NET1_NET_V4=192.168.100
NET1_NETMASK_V4=255.255.255.0
NET1_NET_V6=192:168:100
NET1_NETMASK_V6=48
TUNNEL_NET_V4=10.0.0
TUNNEL_NET_V6=10
#
SUT_CTL_HOSTNAME=freebsd-vbox
SUT_NET0_HOSTNAME=SETME
SUT_NET1_HOSTNAME=SETME
SENDER_CTL_HOSTNAME=netbsd-vbox
SENDER_NET0_HOSTNAME=SETME
RECEIVER_CTL_HOSTNAME=DONOTUSE
RECEIVER_NET1_HOSTNAME=SETME
#
SUT_CTL_IFP_NAME=em1
SUT_NET0_IFP_NAME=em3
SUT_NET1_IFP_NAME=SETME
#
SENDER_CTL_IFP_NAME=wm1
SENDER_NET0_IFP_NAME=wm3
SENDER_NET1_IFP_NAME=SETME
#
RECEIVER_CTL_IFP_NAME=SETME
RECEIVER_NET0_IFP_NAME=SETME
RECEIVER_NET1_IFP_NAME=SETME
#
PING_TRIES=3
PING_SIZE_LARGE=2000
PING_SIZE_SMALL=200
#
# A route to this address is added to SENDER via SUT and is used in NAT tests
#
NET0_FAKE_ADDR_V4=1.1.1.1
NET0_FAKE_NET_V4=1.1.1.0
NET0_FAKE_NETMASK_V4=255.255.255.0
NET0_FAKE_ADDR_V6=1:1:1::1
NET0_FAKE_NET_V6=1:1:1::0
NET0_FAKE_NETMASK_V6=48
#
# A route to this address is added to RECEIVER via SUT and is used in NAT tests
#
NET1_FAKE_ADDR_V4=2.2.2.2
NET1_FAKE_NET_V4=2.2.2.0
NET1_FAKE_NETMASK_V4=255.255.255.0
NET1_FAKE_ADDR_V6=2:2:2::2
NET1_FAKE_NET_V6=2:2:2::0
NET1_FAKE_NETMASK_V6=48
#
# The FTP tests will attempt to download this file
#
FTP_PATH=/pub/test_data.txt
#
TCP_TIMEOUT=2
#
# This username is the target for testing of the rcmd proxy
#
RCMD_USER=root
#
# Because FreeBSD's rcmd(3) uses $RSH internally and does not behave properly
# when $RSH = rsh
#
RRCP=rcp
#RRCP=scp
RRSH=rsh
#RRSH=ssh
#
BIN_IPF=/sbin/ipf
BIN_IPFSTAT=/sbin/ipfstat
BIN_IPNAT=/sbin/ipnat
BIN_IPPOOL=/sbin/ippool
#
IPF_VAR_DIR=/var/tmp/ipf_test
IPF_BIN_DIR=${IPF_VAR_DIR}/bin
IPF_LIB_DIR=${IPF_VAR_DIR}/lib
IPF_LOG_DIR=${IPF_VAR_DIR}/log/`date +'%Y_%m_%d_%H%M'`/
IPF_TMP_DIR=${IPF_VAR_DIR}/tmp
IPF_LOG_FILE=${IPF_LOG_DIR}/$1.$$.log
#
TEST_IPF_CONF=ipf_test.conf
TEST_IPNAT_CONF=ipnat_test.conf
TEST_IPPOOL_CONF=ippool_test.conf
#
# -------- END OF CONFIGURATION VARIABLES --------
#
SUT_NET0_ADDR_V4=${NET0_NET_V4}.2
SUT_NET0_ADDR_V6=${NET0_NET_V6}::2
SENDER_NET0_ADDR_V4=${NET0_NET_V4}.3
SENDER_NET0_ADDR_V6=${NET0_NET_V6}::3
SENDER_TUNNEL_ADDR_V4=${TUNNEL_NET_V4}.3
SENDER_TUNNEL_ADDR_V6=${TUNNEL_NET_V6}::3
#
SUT_NET1_ADDR_V4=${NET1_NET_V4}.130
SUT_NET1_ADDR_V6=${NET1_NET_V6}::130
RECEIVER_NET1_ADDR_V4=${NET1_NET_V4}.131
RECEIVER_NET1_ADDR_V6=${NET1_NET_V6}::131
RECEIVER_TUNNEL_ADDR_V4=${TUNNEL_NET_V4}.131
RECEIVER_TUNNEL_ADDR_V6=${TUNNEL_NET_V6}::131
#
export SUT_NET0_DOT=2
export SUT_NET1_DOT=130
export SENDER_NET0_DOT=3
export RECEIVER_NET0_DOT=131
#
for i in SUT SENDER RECEIVER; do
	for j in NET0 NET1; do
		name=${i}_${j}_ADDR_V4
		dot=$(eval echo \$${i}_${j}_DOT)
		x=$(echo \$$name)
		if [[ -n $x && -n $dot ]] ; then
			alias=1
			for k in 16 32 48 64 80 96 112; do
				addr=$((dot + k))
				name="${i}_${j}_ADDR_V4_A${alias}"
				eval "${name}=\$${j}_NET_V4.${addr}"
				eval "export ${name}"
				name="${i}_${j}_ADDR_V6_A${alias}"
				eval "${name}=\$${j}_NET_V6::${addr}"
				eval "export ${name}"
				alias=$((alias + 1))
			done
		fi
	done
done
#
for i in SUT SENDER RECEIVER; do
	for j in CTL_IFP_NAME CTL_HOSTNAME NET0_HOSTNAME NET1_HOSTNAME \
	    NET0_IFP_NAME NET0_ADDR_V4 NET0_ADDR_V6 \
	    NET1_IFP_NAME NET1_ADDR_V4 NET1_ADDR_V6\
	    SENDER_TUNNEL_ADDR_V4 SENDER_TUNNEL_ADDR_V6 \
	    RECEIVER_TUNNEL_ADDR_V4 RECEIVER_TUNNEL_ADDR_V6 \
	    ; do
		name=${i}_$j
		x=$(eval "echo \$$name")
		if [[ -n $x && $x != SETME ]] ; then
			eval "export $name";
		fi
	done
done
#
export RRCP RRSH BIN_IPF BIN_IPFSTAT BIN_IPNAT BIN_IPPOOL
export PING_TRIES PING_SIZE_LARGE PING_SIZE_SMALL
export TEST_IPF_CONF TEST_IPNAT_CONF TEST_IPPOOL_CONF
export IPF_LOG_DIR IPF_LOG_FILE IPF_TMP_DIR IPF_BIN_DIR IPF_LIB_DIR IPF_VAR_DIR
export TCP_TIMEOUT LOGGING
export FTP_PATH RCMD_USER
export NET0_NET_V4 NET0_NETMASK_V4 NET0_NET_V6 NET0_NETMASK_V6
export NET1_NET_V4 NET1_NETMASK_V4 NET1_NET_V6 NET1_NETMASK_V6
export NET0_FAKE_ADDR_V4 NET0_FAKE_NET_V4 NET0_FAKE_NETMASK_V4
export NET1_FAKE_ADDR_V4 NET1_FAKE_NET_V4 NET1_FAKE_NETMASK_V4
export NET0_FAKE_ADDR_V6 NET0_FAKE_NET_V6 NET0_FAKE_NETMASK_V6
export NET1_FAKE_ADDR_V6 NET1_FAKE_NET_V6 NET1_FAKE_NETMASK_V6
export SENDER_TUNNEL_ADDR_V4 SENDER_TUNNEL_ADDR_V6
export RECEIVER_TUNNEL_ADDR_V4 RECEIVER_TUNNEL_ADDR_V6
