#!/usr/sbin/dtrace -Fs

fbt:ipf:ipf_nat6_checkout:entry/self->trace == 0 && ((fr_info_t *)arg0)->fin_ifp == (void *)10/{self->trace=1;}
fbt:ipf:ipf_nat6_checkout:return/self->trace/{self->trace=0;}

fbt:ipf:ipf_nat6_checkin:entry/self->trace == 0 && ((fr_info_t *)arg0)->fin_ifp == (void *)10/{self->trace=1;}
fbt:ipf:ipf_nat6_checkin:return/self->trace/{
	self->trace=0;
	printf("%d", arg1);
}
fbt:ipf::entry/self->trace/{}
fbt:ipf::return/self->trace/{
	printf("%x", arg1);
}
sdt:ipf::/self->trace/{}
fr_info_t *fin;
fbt:ipf:ipf_pr_tcp:entry/self->trace/{ fin = (fr_info_t *)arg0; }
fbt:ipf:ipf_pr_tcp:return/self->trace/{
	printf("%d -> %d", fin->fin_fi.fi_ports[0], fin->fin_fi.fi_ports[1]);
}

mblk_t *m;
dblk_t *d;
fbt:ipf:ipf_pullup:entry{
	m = (mblk_t *)arg0;
	d = m->b_datap;
	printf("m %p cksum %d-%d %x %x\n", m,
        d->db_cksumstart,
        d->db_cksumend,
        d->db_cksumstuff,
	d->db_struioun.cksum.cksum_val.u32);
}
hook_pkt_event_t *hpe;
fbt:ipf:ipf_hk_v6_out:entry/((hook_pkt_event_t *)arg1)->hpe_ofp == (phy_if_t)10/{
	hpe = (hook_pkt_event_t *)arg1;
	self->hook = 1;
}
fbt:ipf:ipf_hk_v6_out:return/self->hook == 1/{
	m = (mblk_t *)hpe->hpe_mb;
	d = m->b_datap;
	printf("m %p cksum %d-%d %x %x\n", m,
        d->db_cksumstart,
        d->db_cksumend,
        d->db_cksumstuff,
	d->db_struioun.cksum.cksum_val.u32);
	self->hook = 0;
}
fbt:ipf:ipf_fix_outcksum:entry/self->trace/{printf("%x %x", arg0, arg3);}
fbt:ipf:ipf_fix_incksum:entry/self->trace/{printf("%x %x", arg0, arg3);}
